import { Tensor } from '../tensor';
import { TensorLike } from '../types';
declare class ReluOps {
    static relu<T extends Tensor>(x: T | TensorLike): T;
    static elu<T extends Tensor>(x: T | TensorLike): T;
    static selu<T extends Tensor>(x: T | TensorLike): T;
    static leakyRelu<T extends Tensor>(x: T | TensorLike, alpha?: number): T;
    static prelu<T extends Tensor>(x: T | TensorLike, alpha: T | TensorLike): T;
}
export declare const elu: typeof ReluOps.elu;
export declare const leakyRelu: typeof ReluOps.leakyRelu;
export declare const prelu: typeof ReluOps.prelu;
export declare const relu: typeof ReluOps.relu;
export declare const selu: typeof ReluOps.selu;
export {};
