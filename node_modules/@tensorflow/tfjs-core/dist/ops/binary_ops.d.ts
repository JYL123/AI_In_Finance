import { Tensor } from '../tensor';
import { TensorLike } from '../types';
declare class BinaryOps {
    static add<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
    static addStrict<T extends Tensor>(a: T, b: T): T;
    static sub<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
    static subStrict<T extends Tensor>(a: T, b: T): T;
    static pow<T extends Tensor>(base: T | TensorLike, exp: Tensor | TensorLike): T;
    static powStrict<T extends Tensor>(base: T, exp: Tensor): T;
    static mul<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
    static mulStrict<T extends Tensor>(a: T, b: T): T;
    static div<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
    static floorDiv<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
    static divStrict<T extends Tensor>(a: T, b: T): T;
    static mod<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
    static modStrict<T extends Tensor>(a: T, b: T): T;
    static minimum<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
    static minimumStrict<T extends Tensor>(a: T, b: T): T;
    static maximum<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
    static maximumStrict<T extends Tensor>(a: T, b: T): T;
    static squaredDifference<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
    static squaredDifferenceStrict<T extends Tensor>(a: T, b: T): T;
    static atan2<T extends Tensor>(a: Tensor | TensorLike, b: Tensor | TensorLike): T;
}
export declare const add: typeof BinaryOps.add;
export declare const addStrict: typeof BinaryOps.addStrict;
export declare const atan2: typeof BinaryOps.atan2;
export declare const div: typeof BinaryOps.div;
export declare const divStrict: typeof BinaryOps.divStrict;
export declare const floorDiv: typeof BinaryOps.floorDiv;
export declare const maximum: typeof BinaryOps.maximum;
export declare const maximumStrict: typeof BinaryOps.maximumStrict;
export declare const minimum: typeof BinaryOps.minimum;
export declare const minimumStrict: typeof BinaryOps.minimumStrict;
export declare const mod: typeof BinaryOps.mod;
export declare const modStrict: typeof BinaryOps.modStrict;
export declare const mul: typeof BinaryOps.mul;
export declare const mulStrict: typeof BinaryOps.mulStrict;
export declare const pow: typeof BinaryOps.pow;
export declare const powStrict: typeof BinaryOps.powStrict;
export declare const squaredDifference: typeof BinaryOps.squaredDifference;
export declare const squaredDifferenceStrict: typeof BinaryOps.squaredDifferenceStrict;
export declare const sub: typeof BinaryOps.sub;
export declare const subStrict: typeof BinaryOps.subStrict;
export {};
