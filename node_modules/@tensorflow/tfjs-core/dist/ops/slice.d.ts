import { Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D } from '../tensor';
import { Rank, TensorLike } from '../types';
declare class SliceOps {
    static slice1d(x: Tensor1D | TensorLike, begin: number, size: number): Tensor1D;
    static slice2d(x: Tensor2D | TensorLike, begin: [number, number], size: [number, number]): Tensor2D;
    static slice3d(x: Tensor3D | TensorLike, begin: [number, number, number], size: [number, number, number]): Tensor3D;
    static slice4d(x: Tensor4D | TensorLike, begin: [number, number, number, number], size: [number, number, number, number]): Tensor4D;
    static slice<R extends Rank, T extends Tensor<R>>(x: T | TensorLike, begin: number | number[], size?: number | number[]): T;
}
export declare const slice: typeof SliceOps.slice;
export declare const slice1d: typeof SliceOps.slice1d;
export declare const slice2d: typeof SliceOps.slice2d;
export declare const slice3d: typeof SliceOps.slice3d;
export declare const slice4d: typeof SliceOps.slice4d;
export {};
